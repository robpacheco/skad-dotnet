using System;
using System.Collections.Generic;
using System.Linq;
using Skad.VulnFeed.Data.Model;
using Skad.VulnFeed.MvcControllers.ViewModels;

namespace Skad.VulnFeed.MvcControllers.Extensions
{
    public static class VulnerabilityFeedIndexModelExtensions
    {
        public static VulnerabilityFeedItem ToVulnerabilityFeedItem(this VulnerableComponentSummary summary)
        {
            return new VulnerabilityFeedItem(
                summary.Vulnerability.CveId,
                summary.Component.ComponentName,
                AffectedVersionString(summary),
                summary.Vulnerability.ScoreCvss2,
                summary.Vulnerability.SeverityCvss2,
                summary.Vulnerability.ScoreCvss3,
                summary.Vulnerability.SeverityCvss3);
        }

        private static string AffectedVersionString(VulnerableComponentSummary summary)
        {
            if (summary.VulnerableVersionCount - 1 > 0)
            {
                return $"{summary.LatestVulnerableVersionName} (+ {summary.VulnerableVersionCount - 1} versions)";
            }

            return summary.LatestVulnerableVersionName;
        }
        
        // public static IEnumerable<VulnerabilityFeedItem> ToVulnerabilityFeedItems(this Vulnerability vuln)
        // {
        //     var affectedComponents = vuln.AffectedVersions.GroupBy(
        //         c => c.ComponentVersion.Component.ComponentName,
        //         c => c.ComponentVersion.VersionName,
        //         (compName, versions) =>
        //         {
        //             var list = versions.OrderByDescending(v => v).ToList();
        //             var additionalVersions = list.Count > 1 ? $" (+ {list.Count - 1} more versions" : "";
        //             return new
        //             {
        //                 CompName = compName,
        //                 Versions = $"{list.First()}{additionalVersions}"
        //             };
        //         }).ToList();
        //
        //     if (affectedComponents.Count < 1)
        //     {
        //         Console.WriteLine($"[WARN] No affected components found for CVE: {vuln.CveId}");
        //         return new[]
        //         {
        //             new VulnerabilityFeedItem(
        //                 vuln.CveId,
        //                 vuln.ScoreCvss3,
        //                 vuln.SeverityCvss3)
        //         };
        //     }
        //
        //     if (affectedComponents.Count > 1)
        //     {
        //         Console.WriteLine($"[WARN] More than one component found for CVE: {vuln.CveId}");
        //     }
        //
        //     var affectedComponent = affectedComponents.First();
        //     return new[]
        //     {
        //         new VulnerabilityFeedItem(
        //             vuln.CveId,
        //             affectedComponent.CompName,
        //             affectedComponent.Versions,
        //             vuln.ScoreCvss3,
        //             vuln.SeverityCvss3)
        //     };
        // }
    }
}