using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Skad.Common.Api.Common;
using Skad.VulnFeed.Data.Model;
using Skad.VulnFeed.Domain.Repository;
using Skad.VulnFeed.MvcControllers.ViewModels;

namespace Skad.VulnFeed.Domain.Service
{
    public class VulnerabilityFeedService : IVulnerabilityFeedService
    {
        private readonly IVulnerabilityFeedRepository _vulnFeedRepository;

        public VulnerabilityFeedService(IVulnerabilityFeedRepository vulnFeedRepository)
        {
            _vulnFeedRepository = vulnFeedRepository ?? throw new ArgumentNullException(nameof(vulnFeedRepository));
        }
        
        public IList<Vulnerability> GetVulnerabilitiesForFeed(long vulnerabilityFeedId)
        {
            return new List<Vulnerability>();
        }

        public async Task<(PageInfo pageInfo, List<Vulnerability> vulnerabilities)> GetVulnerabilities(string? cveId,
            int pageNum, int pageSize)
        {
            return await _vulnFeedRepository.GetVulnerabilitiesWithFilter(cveId, pageNum, pageSize);
        }
        
        public async Task<Vulnerability?> GetVulnerability(long id)
        {
            var vulnerability = await _vulnFeedRepository.FindVulnerabilityById(id);
            return vulnerability;
        }

        public async Task<Vulnerability> AddOrUpdateVulnerability(Vulnerability vuln)
        {
            return await _vulnFeedRepository.AddOrUpdateVulnerability(vuln);
        }

        public async Task AddComponentToFeed(string cpe)
        {
            await _vulnFeedRepository.AddComponentToFeed(cpe);
        }

        public async Task RemoveComponentFromFeed(string cpe)
        {
            await _vulnFeedRepository.RemoveComponentFromFeed(cpe);
        }

        public async Task<(PageInfo pageInfo, List<VulnerableComponentSummary> vulnerabilities)> GetVulnerabilityFeedItems(int pageNum, int pageSize)
        {
            return await _vulnFeedRepository.GetVulnerabilityFeedItems(pageNum, pageSize);
        }
    }
}